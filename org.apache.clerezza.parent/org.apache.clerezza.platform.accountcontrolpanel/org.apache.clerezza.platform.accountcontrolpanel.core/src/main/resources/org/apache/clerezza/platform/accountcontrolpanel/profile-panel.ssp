import org.apache.clerezza.rdf.core.{BNode, UriRef}
import org.apache.clerezza.rdf.ontologies.{DC, FOAF}
import org.apache.clerezza.rdf.scala.utils.RichGraphNode
import scala.xml.Null
import xml.{Text, Attribute}


def cp(s: Any) = new UriRef("http://clerezza.org/2009/03/controlpanel#" + s)
def platform(s: Any) = new UriRef("http://clerezza.org/2009/08/platform#" + s)
resultDocModifier.addStyleSheet("profile/style/profile.css");
resultDocModifier.addScriptReference("profile/scripts/profile.js");
resultDocModifier.addScriptReference("profile/scripts/IEKeygen.js");
resultDocModifier.setTitle("Account Control Panel");
resultDocModifier.addNodes2Elem("tx-module", <h1>Account Control Panel</h1>);
resultDocModifier.addNodes2Elem("tx-module-tabs-ol", <li class="tx-active">
  <a href="#">Profile</a>
</li>);
resultDocModifier.addNodes2Elem("tx-module-tabs-ol", <li>
  <a href="control-panel">Settings</a>
</li>);

val agent: RichGraphNode = res / FOAF.primaryTopic
var webId =""

def createWebId() = {
  <h3>Associate Profile to Web-id</h3>
  <div id="newOrExistingSelection">
    <p>Your profile is not currently associated to a Web-ID.A Web-ID allows you
        to link your friends as well as to log-in to many sites (supporting foaf+ssl
        or open-id).
    </p>
    <p>You may either create a new Web-Id or associate your account to an
        existing Web-Id.Only creating a Web-Id here will allow you to manage your
        profile here.
    </p>
    <form action="#" id="associateSelection">
			<button type="button" id="newWebIdButton">Create a new Web-Id</button>
			<button type="button" id="existingWebIdButton">I already have a Web-ID and want to use it</button>
    </form>
  </div>
  <div id="createNewWebId">
    <p>You have chosen to create a new Web-Id.</p>
    <p>The Web-ID will be created as follows:
        <br/>
      <ol>
        <li>Web-Id:
          {webId = res / cp("suggestedPPDUri") *;
           webId += "#me";
           webId}
        </li>
				<li>Personal-Profile Document: {res/cp("suggestedPPDUri")*}</li>
      </ol>
    </p>
		<form method="post" action="profile/create-new-web-id">
			<input value="Create it!" type="submit"/>
    </form>
  </div>
  <div id="setExistingWebId">
    <p>Please enter your Web-Id, if your Web-Id supports Foaf+SSL you will
      be able to use it to log in to this site.</p>
    <form method="post" action="profile/set-existing-webid">
      <label for="webid">Web-Id</label> <input type="text" name="webid" size="80" title="Web-ID"/>
        <br/>
        <input value="Associate Profile to Web-Id" type="submit"/>
        <p/>
    </form>
  </div>

}

def existingWebId() = {
  if ((res / cp("isLocalProfile")).as[Boolean]) {
    existingLocalWebId()
  } else {
    roamingUser()
  }
}


def existingLocalWebId() = {
  <h3>Manage your profile</h3>
          <p>Here you can change your public profile.</p>
          <form method="post" action="profile/modify">
              <input type="hidden" name="webId" value={agent *}/>
            <label for="name">name</label> <input type="text" name="name" value={agent / FOAF.name *}/>
              <br/>
		<label for="description">description</label>
		<textarea name="description">{agent / DC.description *}</textarea> <br/>
              <input value="Modify" type="submit"/>
              <p/>
          </form>

	<h3>WebID Login</h3>

	<script type="text/javascript"><![CDATA[
		$(document).ready(  function(){ configurePage(); }   );
 	]]></script>

	<div id="iehelptext" style="display: none;">
		<p>Using Internet Explorer under Windows Vista or above or Windows
			Server 2008, you need to configure the following for this to work:</p>
		<ul>
			<li>Add this site to the <i>Trusted Sites</i> list: in Internet
				Options -&gt; Security -&gt; Trusted Sites -&gt; Sites -&gt; Add ...</li>
			<li>You may need to configure the trust level (in this tab), using
				<i>Custom Level...</i>: enable <i>Initialize and script ActiveX
					controls not marked as safe for scripting</i>.</li>
			<li>If you are using Windows Vista without SP1 or above, you will
				probably need to install <a href="cacert.crt">this certificate</a> as a
				Trusted Root Certification Authority Certificate for your own
				certificate installation to succeed. You should probably remove that
				trusted root CA certificate afterwards.</li>
		</ul>
	</div>
	<form id="keygenform" method="post" action="profile/keygen">
		<input name="webId" size="60" id="webId" type="hidden" value={agent*} />
		<table>
			<tr>
				<td>Common Name (for identifying certificate in browser):</td>
				<td>
					<input name="cn" size="35" id="cn" type="text" value={ ((agent/FOAF.name*)+"@clerezza")}/>
				</td>
			</tr>
			<tr>
				<td>Key strength:</td>
				<td id="keystrenghtd">
					<keygen id="spkac" name="spkac" challenge="TheChallenge1"/>
				</td>
			</tr>
			<tr>
				<td>Valid for:
					<br/>
					(defaults to 1 year)</td>
				<td>
					<input type="text" name="hours" value="0.0" size="4"/>
					hours
					<br/>
					<input type="text" name="days" value="365" size="4"/>
					days</td>
			</tr>
		</table>
		<input id="keygensubmit" type="submit" value="submit certificate request" />
	</form>
}

def roamingUser() = {
  <h3>Using remote profile</h3>
          <p>
		{agent / FOAF.nick *}, you have accessed this site using your Web-Id
            {"<" + (agent *) + ">"}
            which has not been
            created on this site.To edit your profile you should visit the site issuing the
            profile.</p>
}

<div id="tx-content">
  <h2>Personal Profile</h2>{agent ! match {
  case _: BNode => createWebId()
  case _: UriRef => existingWebId()
}}
</div>